---
---

```{r}
#| include: false
knitr::opts_chunk$set(
  fig.align = "center"
)
```

```{r}
#| include: false
library(Statamarkdown)
```

```{stata, include=FALSE, collectcode=TRUE}
adopath ++ ../../..
```

# How to collect and export results

This example shows how to conveniently save and export your estimates using the `r(table)` matrix 
that is now returned by each command.

## Setup example data
```{stata collectcode=TRUE}
use https://raw.github.com/remlapmot/mrrobust/master/dodata, clear
```

Select observations (p-value with exposure < 10^-8^)
```{stata collectcode=TRUE}
gen byte sel1 = (ldlcp2 < 1e-8)
```

## Fit estimators - collecting results using `r(table)` matrix {#fit}

IVW (with fixed effect standard errors)
```{stata collectcode=TRUE}
mregger chdbeta ldlcbeta [aw=1/(chdse^2)] if sel1==1, ivw fe
mat ivw = r(table)
```

MR-Egger (with SEs using an unconstrained residual variance)
```{stata collectcode=TRUE}
mregger chdbeta ldlcbeta [aw=1/(chdse^2)] if sel1==1
mat mregger = r(table)
```

MR-Egger using the radial formulation
```{stata collectcode=TRUE}
mregger chdbeta ldlcbeta [aw=1/(chdse^2)] if sel1==1, radial
mat radial = r(table)
```

Weighted mode estimator
```{stata collectcode=TRUE}
mrmodal chdbeta chdse ldlcbeta ldlcse if sel1==1, weighted
mat mode = r(table)
```

Weighted median estimator
```{stata collectcode=TRUE}
mrmedian chdbeta chdse ldlcbeta ldlcse if sel1==1, weighted
mat median = r(table)
```

## Combine and export results

Check our matrices
```{stata}
mat dir
mat list ivw
mat list mregger
mat list radial
mat list mode
mat list median
```

Combined into single matrix
```{stata collectcode=TRUE}
mat output = (ivw, mregger, radial, mode, median)
mat colnames output = ivw_beta mregger_beta mregger_cons ///
	radial_beta radial_cons mode_beta median_beta
mat coleq output = "" "" "" "" "" "" ""
mat output = output'
mat list output, format(%4.3f)
```

Export matrix to dataset
```{stata results='hide', collectcode=TRUE}
drop _all
svmat output, names(col)
local rownames : rownames output
di "`rownames'"
tokenize `rownames'
gen str15 estimate = ""
forvalues i = 1/7 {
	replace estimate = "``i''" in `i'
}
```

Show dataset
```{stata}
list estimate b se z pvalue ll ul, clean noobs
```

Save dataset
```stata
save myestimates, replace
```

Export as tab-delimited textfile
```stata
export delimited using myestimates.txt, delimiter(tab) replace
```
