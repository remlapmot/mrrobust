{
  "hash": "f35ae37f8cc5a992a2d046918ae8d7d4",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\n---\n\n\n\n\n# Access the OpenGWAS API from a Stata do-file or Stata Markdown script {#title}\n\n## Introduction\n\nThis example shows how to run R and Stata code within the same Stata Markdown (`.stmd`) script. \nThe general approach is detailed on the Stata Markdown website \n[here](https://grodri.github.io/markstat/quantiles) and \n[here](https://grodri.github.io/markstat/gettingStarted#R).\n\nThis means that we can use the functions provided by the \n[**TwoSampleMR**](https://github.com/MRCIEU/TwoSampleMR) package to obtain data from the [OpenGWAS API}(https://api.opengwas.io/) which is the successor to [MR-Base](https://www.mrbase.org/) [@mrbase].\n\nThe OpenGWAS API requires authentication. You must place an `OPENGWAS_JWT` token (by creating a free account on <https://api.opengwas.io/profile/>) in your _.Renviron_ file before running the code below. See the [**ieugwasr** website](https://mrcieu.github.io/ieugwasr/articles/guide.html#authentication) for more information.\n\nBefore you start please install the following two Stata packages from the SSC archive, so in Stata \nissue the following commands (I have commented them out because I have already installed them).\n\n```stata\nssc install whereis\nssc install markstat\n```\n\n## Example Stata Markdown document\n\nThe following is the example Stata Markdown document.\n\n\n\n\n\n````{.markdown}\n---\ntitle: Using mrrobust in a Markstat document example\n---\n\nWe first need to register the R executable with Stata.\n\n```s\nif c(os) == \"Windows\" local rpath \"C:\\\\Program Files\\\\R\\\\R-4.4.1\\\\bin\\\\x64\\\\R.exe\"\nelse if c(os) == \"Unix\" local rpath \"/usr/bin/R\"\nelse local rpath \"/usr/local/bin/R\"\nwhereis R \"`rpath'\"\n```\n\nNext we have an R code chunk in which we install the required packages in R.\n\n```r\ninstall.packages(\n  \"TwoSampleMR\",\n  repos = c(\n    \"https://mrcieu.r-universe.dev\",\n    \"https://cloud.r-project.org\"\n  ),\n  dependencies = TRUE\n)\n```\n\n## Extracting data from the OpenGWAS API\n\nWe will be running the script from the MR-Base paper \n([Hemani et al., 2018](https://doi.org/10.7554/eLife.34408)). \nThe R code we will use is from \n[here](https://raw.githubusercontent.com/explodecomputer/mr-base-methods-paper/master/scripts/ldl-chd.R).\n\nFirst, we load the packages into our R session.\nNote that the **foreign** package provides the \n`write.dta()` function which we will use to save the data in Stata format.\n\n```r\nlibrary(TwoSampleMR)\nlibrary(MRInstruments)\nlibrary(foreign)\n```\n\nOur edited version of the code starts by reading in some code\nto generate a set of plots in R.\n\n```r\nsource(\"mrplots.R\")\n```\n\nWe can access the data using the **MRInstruments** package.\n\n```r\ndata(gwas_catalog)\n\n# Get published SNPs for LDL cholesterol\nldl_snps <- \n  subset(gwas_catalog, \n    grepl(\"LDL choles\", Phenotype) & Author == \"Willer CJ\")$SNP\n\n# Extract from GLGC dataset\nexposure <- \n  convert_outcome_to_exposure(\n    extract_outcome_data(ldl_snps, \"ieu-a-300\"))\n\n# Get outcome data from Cardiogram 2015\noutcome <- extract_outcome_data(exposure$SNP, \"ieu-a-7\")\n\n# Harmonise exposure and outcome datasets\n# Assume alleles are on the forward strand\ndat <- harmonise_data(exposure, outcome, action = 1)\n```\n\nAt this point we have our harmonised genotype-exposure and \ngenotype-outcome association data saved in an object in our \nR session called `dat`.\n\nThe next two code chunks perform the analysis in R.\n\n```r\n# Perform MR\nmr(dat)\nmr_heterogeneity(dat)\ndat$exposure <- \"LDL cholesterol\"\ndat$outcome <- \"Coronary heart disease\"\n\n# Label outliers and create plots\ndat$labels <- dat$SNP\ndat$labels[! dat$SNP %in% c(\"rs11065987\", \"rs1250229\", \"rs4530754\")] <- NA\n```\n\n```r\npng(\"ldl-chd.png\", width=1000, height=1000)\nmr_plots(dat)\ndev.off()\n```\n\n![Plots generated by the TwoSampleMR R package.](ldl-chd.png)\n\nWe now save our `dat` object as a Stata dataset.\n\n```r\nwrite.dta(dat, file = \"dat.dta\")\n```\n\n## Performing the analysis using mrrobust in Stata\n\nWe now switch from using R code chunks to Stata code chunks.\nWe read the data into Stata and list the variable names\n(note any `.` in the colnames of `dat` have been replaced with `_`).\n\n```s\nuse dat, clear\nds, v(28)\ndi _N\n```\n\nWe can then run the IVW model using `mregger` with multiplicative\nstandard errors.\n\n```s\nmregger beta_outcome beta_exposure [aw=1/(se_outcome^2)], ivw\n```\n\nIt is helpful to view the forest plot of genotype specific IV estimates.\n\n```s\nmrforest beta_outcome se_outcome beta_exposure se_exposure, ivid(SNP) ///\n\txlabel(-3,-2,-1,0,1,2,3)\ngraph export ldl-chd-mrforest.svg, width(600) replace\n```\n\n![Forest plot of genotype specific IV estimates.](ldl-chd-mrforest.svg)\n\nWe can visualise this model with `mreggerplot`.\n\n```s\nmreggerplot beta_outcome se_outcome beta_exposure se_exposure\ngraph export ldl-chd-mreggerplot.svg, width(600) replace\n```\n\n![Plot of the MR-Egger model.](ldl-chd-mreggerplot.svg)\n\nWe then fit the MR-Egger, median, and modal based estimators.\n\n```s\nmregger beta_outcome beta_exposure [aw=1/(se_outcome^2)]\n```\n\n```s\nmrmedian beta_outcome se_outcome beta_exposure se_exposure, weighted\n```\n\n```s\nmrmodal beta_outcome se_outcome beta_exposure se_exposure, weighted\n```\n````\n\n\n\n\nAnd we could continue with additional Stata code (or indeed R code) as we liked.\n\nNote to run this `.stmd` file in Stata we do so with the following command (specifying additional \noptions as required, see `help markstat` for more information).\n\n```stata\nmarkstat using markstat-call-R-example\n```\n\n## References\n\n::: {#refs}\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}